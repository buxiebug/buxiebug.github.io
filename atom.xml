<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码农想种地</title>
  <subtitle>努力的Coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://trytofix.com/"/>
  <updated>2016-05-05T06:54:40.349Z</updated>
  <id>http://trytofix.com/</id>
  
  <author>
    <name>brian.yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PG语法汇总</title>
    <link href="http://trytofix.com/2016/05/05/PG%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    <id>http://trytofix.com/2016/05/05/PG语法汇总/</id>
    <published>2016-05-05T06:43:08.000Z</published>
    <updated>2016-05-05T06:54:40.349Z</updated>
    
    <content type="html">&lt;p&gt;假如test表中type字段的格式xxxx:yyyy:zzzz,需要取到以’:’为分隔符将type字段进行分割后的第一部分也就是xxxx的内容进行分组并排序&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; split_part(&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; atype, &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; atype &lt;span class=&quot;keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;desc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;替换type中的xxxx:yyyy:zzzz为xxxx,yyyy,zzzz&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;依此计算返回式的值,遇到非null值就返回&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;coalesce&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;假如test表中type字段的格式xxxx:yyyy:zzzz,需要取到以’:’为分隔符将type字段进行分割后的第一部分也就是xxxx的内容进行分组并排序&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
      <category term="数据库" scheme="http://trytofix.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="PostgreSQL" scheme="http://trytofix.com/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>solr查询语法积累</title>
    <link href="http://trytofix.com/2016/05/05/solr%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95%E7%A7%AF%E7%B4%AF/"/>
    <id>http://trytofix.com/2016/05/05/solr查询语法积累/</id>
    <published>2016-05-05T06:31:02.000Z</published>
    <updated>2016-05-05T06:54:40.349Z</updated>
    
    <content type="html">&lt;h3 id=&quot;查询某个字段包含某个关键字&quot;&gt;&lt;a href=&quot;#查询某个字段包含某个关键字&quot; class=&quot;headerlink&quot; title=&quot;查询某个字段包含某个关键字&quot;&gt;&lt;/a&gt;查询某个字段包含某个关键字&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;q=cities:北京&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;查询某个字段不包含某些关键字&quot;&gt;&lt;a href=&quot;#查询某个字段不包含某些关键字&quot; class=&quot;headerlink&quot; title=&quot;查询某个字段不包含某些关键字&quot;&gt;&lt;/a&gt;查询某个字段不包含某些关键字&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;q=cities:* NOT 上海 NOT 北京 NOT 黔南 NOT 三亚&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;分组查询&quot;&gt;&lt;a href=&quot;#分组查询&quot; class=&quot;headerlink&quot; title=&quot;分组查询&quot;&gt;&lt;/a&gt;分组查询&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://localhost/searchapi/search_engine/select?q=name:brian*&amp;amp;fl=id,name&amp;amp;rows=5000&amp;amp;wt=json&amp;amp;indent=true&amp;amp;group=true&amp;amp;group.field=groupid&amp;amp;group.offset=5&amp;amp;group.limit=10&amp;amp;group.ngroups=true&amp;amp;group.sort=feed_time%20desc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查询某个字段包含某个关键字&quot;&gt;&lt;a href=&quot;#查询某个字段包含某个关键字&quot; class=&quot;headerlink&quot; title=&quot;查询某个字段包含某个关键字&quot;&gt;&lt;/a&gt;查询某个字段包含某个关键字&lt;/h3&gt;&lt;figure class=&quot;highlight plai
    
    </summary>
    
      <category term="Solr" scheme="http://trytofix.com/categories/Solr/"/>
    
    
      <category term="搜索引擎" scheme="http://trytofix.com/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>xclip操作剪切板</title>
    <link href="http://trytofix.com/2016/05/05/xclip%E6%93%8D%E4%BD%9C%E5%89%AA%E5%88%87%E6%9D%BF/"/>
    <id>http://trytofix.com/2016/05/05/xclip操作剪切板/</id>
    <published>2016-05-05T05:53:25.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;blockquote&gt;&lt;p&gt;Reads from standard in, or from one or more files, and makes the data&lt;br&gt;available as an X selection for pasting into X applications. Prints&lt;br&gt;current X selection to standard out.&lt;/p&gt;&lt;/blockquote&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install xclip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用xclip可以从标准输入,文件读取内容存入到剪切板中，也可以将剪切板中的内容输出到标准输出中．&lt;/p&gt;&lt;p&gt;例子:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;将当前系统运行状态复制到剪切板(默认是xlip的剪切板，不是系统剪切板,所以使用ctrl+v无效&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uptime | xclip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输出剪切板中的内容&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xclip -o&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将当前系统运行状态复制到系统剪切板中&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uptime | xclip -selection clipboard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uptime | xclip -selection clip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;从系统剪切板中获取内容ctrl+v或者&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xclip -o -selection clipboard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xclip -o -selection clip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将文件复制到剪切板&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xclip /etc/profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将剪切板中的图片保存到文件&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xclip -selection clip -t image/png -o &amp;gt; /tmp/snapshot.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;指定文件只允许被复制十次&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xclip -l 10 -verbose -selection clip /etc/profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;Reads from standard in, or from one or more files, and makes the data&lt;br&gt;available as an X selection for pasting into X appli
    
    </summary>
    
      <category term="Linux" scheme="http://trytofix.com/categories/Linux/"/>
    
    
      <category term="Command Line" scheme="http://trytofix.com/tags/Command-Line/"/>
    
  </entry>
  
  <entry>
    <title>Linux Gnome下录制Gif动图</title>
    <link href="http://trytofix.com/2016/05/05/Linux-Gnome%E4%B8%8B%E5%BD%95%E5%88%B6Gif%E5%8A%A8%E5%9B%BE/"/>
    <id>http://trytofix.com/2016/05/05/Linux-Gnome下录制Gif动图/</id>
    <published>2016-05-05T04:02:07.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;p&gt;安装&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install byzanz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#录制全屏，时间为35秒，保存到byzanz-demo.gif中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;byzanz-record -d 35 -x 0 -y 0  byzanz-demo.gif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;-d 录制时间&lt;/li&gt;&lt;li&gt;-x 左上角x轴坐标&lt;/li&gt;&lt;li&gt;-y 左上角y轴坐标&lt;/li&gt;&lt;li&gt;-w 录制区域的宽度&lt;/li&gt;&lt;li&gt;-h 录制区域的高度&lt;/li&gt;&lt;li&gt;-c 记录鼠标指针&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;更多用法参照:&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;man byzanz-record&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;安装&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://trytofix.com/categories/Linux/"/>
    
    
      <category term="Command Line" scheme="http://trytofix.com/tags/Command-Line/"/>
    
  </entry>
  
  <entry>
    <title>gnome-screenshot ubuntu gnome截图</title>
    <link href="http://trytofix.com/2016/05/05/gnome-screenshot-ubuntu-gnome%E6%88%AA%E5%9B%BE/"/>
    <id>http://trytofix.com/2016/05/05/gnome-screenshot-ubuntu-gnome截图/</id>
    <published>2016-05-05T03:37:10.000Z</published>
    <updated>2016-05-05T06:54:40.337Z</updated>
    
    <content type="html">&lt;p&gt;首先看下官方说明&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot is a GNOME  utility  for  taking  screenshots  of  the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;entire  screen,  a  window  or an user-defined area of the screen, with&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;optional beautifying border effects&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在gnome桌面的应用程序-&amp;gt;附件-&amp;gt;截图使用的就是gnome-screenshot．&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -a #截取一个区域&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -a -c #截取一个区域并保存到剪切板&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -w -c #截取当前活动窗口并保存到剪切板&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -w -p #截取当前活动窗口并保存鼠标指针&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -i #弹出交互式的窗体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -a -f /tmp/test.png #截取一个区域保存到/tmp/test.png中.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;-c 与 -f 同时使用时只会保存到剪切板中(ubuntu14.04亲测)&lt;/p&gt;&lt;p&gt;更多用法参见&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;man gnome-screenshot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;首先看下官方说明&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://trytofix.com/categories/Linux/"/>
    
    
      <category term="Command Line" scheme="http://trytofix.com/tags/Command-Line/"/>
    
  </entry>
  
  <entry>
    <title>markdown使用截图以及图床优化写作体验</title>
    <link href="http://trytofix.com/2016/05/04/markdown%E4%BD%BF%E7%94%A8%E6%88%AA%E5%9B%BE%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A%E4%BC%98%E5%8C%96%E5%86%99%E4%BD%9C%E4%BD%93%E9%AA%8C/"/>
    <id>http://trytofix.com/2016/05/04/markdown使用截图以及图床优化写作体验/</id>
    <published>2016-05-04T09:39:07.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;p&gt;首先看一下优化后使用markdown写作插入截图时的体验:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f3jj0xb2i8g211y0lc4qs&quot; alt=&quot;snapshot&quot;&gt;&lt;/p&gt;&lt;p&gt;使用方法,截图+粘贴&lt;/p&gt;&lt;p&gt;在之前，使用markdown插入截图时,通常需要:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用截图工具，截图并保存&lt;/li&gt;&lt;li&gt;将截图保存到工作目录&lt;/li&gt;&lt;li&gt;使用markdown语法引入图片&lt;br&gt;如果需要图床，需要将图片上传到图床，再将图床的url引入markdown&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;使用优化后的方法仅仅需要:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;截图&lt;/li&gt;&lt;li&gt;随意粘贴图床地址/图片本地路径&lt;/li&gt;&lt;/ul&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;在这个例子中，我们是将截图放到了图床中，并返回了图床url到剪切板，经过了一下几个过程:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;调用gnome-screenshot -a -c，使用ubuntu自带的截图软件截图并将结果复制到剪切板&lt;/li&gt;&lt;li&gt;调用xclip -selection clipboard -t image/png -o &amp;gt; /tmp/snapshot.png将剪切板中的内容重定向到文件&lt;/li&gt;&lt;li&gt;调用之前微博图床的工具,传入截图路径,获取截图在新浪图床中的url.&lt;/li&gt;&lt;li&gt;将图床的url复制到系统的剪切板中，同样是使用xclip -selection clipboard&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;将以上内容保存到一个脚本中，snapshot.sh内容如下:&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-screenshot -a -c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xclip -selection clipboard -t image/png -o &amp;gt; /tmp/snapshot.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python /home/q/hexo/blog/weibo_util.py -f /tmp/snapshot.png -u your_weibo_username -p your_weibo_password|xclip -selection clipboard&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中的weibo_util.py，链接为&lt;a href=&quot;https://github.com/trytofix/hexo_weibo_image&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;weibo_util&lt;/a&gt;&lt;/p&gt;&lt;p&gt;gnome-screenshot这个工具是ubuntu自带的截图工具，默认快捷键是ctrl+alt+a,如果没有这个工具，可以根据自己的系统将shell中的gnome-screenshot -a -c这句修改为自己使用的截图软件即可，注意的是一定要将截图保存到剪切板中才可以．&lt;/p&gt;&lt;p&gt;xclip将终端与剪切板连接到了一起，可以在终端可剪切板之间复制粘贴．&lt;br&gt;安装方法:&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install xclip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;使用方法&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;man xclip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;weibo_util.py完成了上传图片到微博图床并返回图床链接，具体的原理，请参照之前的&lt;a href=&quot;/2016/04/06/使用新浪微博图床/&quot;&gt;博文&lt;/a&gt;&lt;/p&gt;&lt;p&gt;要好shell最后的一部就是简历系统快捷键与脚本之间的关联，在ubuntu,在设置中找到键盘设置,如下图：&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f3kc8vb8cpj20nn0hudij&quot; alt=&quot;设置&quot;&gt;&lt;br&gt;在键盘设置中选择快捷键，在自定义快捷键中点击+，新增一项，&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f3kcac5lctj207x04i74m&quot; alt=&quot;snapshot&quot;&gt;&lt;br&gt;名称就是一个别名，这里起名为snapshot&lt;br&gt;命令就是shell的全路径，这里是:&lt;code&gt;/home/q/hexo/blog/snapshot.sh&lt;/code&gt;&lt;br&gt;应用后，点击snapshot的后半部分可以自定义快捷键，快捷键是可以自己定义的，我选择了ctrl+alt+w,之后注销账户，使快捷键生效，接下来，试试ctrl+alt+w，会弹出截屏的图标，截取后，找个地方粘贴看看效果吧～．&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;ps: 这个教程是将截取的图片放到了图床中，返回的是图床地址，将snapshot.sh稍微修改下，就可以将截图放到本地路径中，返回本地的文件路径．&lt;/p&gt;&lt;/blockquote&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;首先看一下优化后使用markdown写作插入截图时的体验:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f3jj0xb2i8g211y0lc4qs&quot; alt=&quot;snapshot&quot;&gt;&lt;/p&gt;&lt;p&gt;使用方法,截图+粘贴&lt;/p&gt;&lt;p&gt;在之前，使用markdown插入截图时,通常需要:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用截图工具，截图并保存&lt;/li&gt;&lt;li&gt;将截图保存到工作目录&lt;/li&gt;&lt;li&gt;使用markdown语法引入图片&lt;br&gt;如果需要图床，需要将图片上传到图床，再将图床的url引入markdown&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;使用优化后的方法仅仅需要:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;截图&lt;/li&gt;&lt;li&gt;随意粘贴图床地址/图片本地路径&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://trytofix.com/categories/Linux/"/>
    
    
      <category term="Command Line" scheme="http://trytofix.com/tags/Command-Line/"/>
    
      <category term="markdown" scheme="http://trytofix.com/tags/markdown/"/>
    
      <category term="hexo" scheme="http://trytofix.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>python lambda</title>
    <link href="http://trytofix.com/2016/04/20/python-lambda/"/>
    <id>http://trytofix.com/2016/04/20/python-lambda/</id>
    <published>2016-04-20T09:44:50.000Z</published>
    <updated>2016-05-05T06:54:40.337Z</updated>
    
    <content type="html">&lt;p&gt;lambda表达式用来简单的定义函数&lt;/p&gt;&lt;p&gt;例如&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;add = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x,y: x+y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输出&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;&lt;p&gt;lambda表达式将&lt;code&gt;:&lt;/code&gt;后的运算结果作为函数返回值&lt;/p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;看下面的例子,理解下&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x ** &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x ** &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x ** &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lambda1 = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: test1(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lambda2 = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: test2(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lambda3 = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x ** &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lambda1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; lambda1(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lambda2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; lambda2(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lambda3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; lambda3(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输出&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lambda1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lambda2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lambda3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;lambda表达式用来简单的定义函数&lt;/p&gt;&lt;p&gt;例如&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;add = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x,y: x+y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输出&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;&lt;p&gt;lambda表达式将&lt;code&gt;:&lt;/code&gt;后的运算结果作为函数返回值&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="lambda" scheme="http://trytofix.com/tags/lambda/"/>
    
  </entry>
  
  <entry>
    <title>2016/04/20随手记</title>
    <link href="http://trytofix.com/2016/04/20/2016-04-20%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    <id>http://trytofix.com/2016/04/20/2016-04-20随手记/</id>
    <published>2016-04-20T09:24:56.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Redis-SET命令&quot;&gt;&lt;a href=&quot;#Redis-SET命令&quot; class=&quot;headerlink&quot; title=&quot;Redis SET命令&quot;&gt;&lt;/a&gt;Redis SET命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;redis 127.0.0.1:6379&amp;gt; SET KEY_NAME VALUE [EX seconds]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例:&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;redis 127.0.0.1:6379&amp;gt; SET url trytofix.com EX 60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&quot;solr-group中的group-limit-group-offset-start-rows&quot;&gt;&lt;a href=&quot;#solr-group中的group-limit-group-offset-start-rows&quot; class=&quot;headerlink&quot; title=&quot;solr group中的group.limit,group.offset,start,rows&quot;&gt;&lt;/a&gt;solr group中的group.limit,group.offset,start,rows&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;group.limit: The number of results (documents) to return for each group. Defaults to 1.&lt;/li&gt;&lt;li&gt;group.offset: The offset into the document list of each group.&lt;/li&gt;&lt;li&gt;start: The offset into the list of groups.&lt;/li&gt;&lt;li&gt;rows: The number of groups to return. Defaults to 10.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;group的limit,offset相当于未分组查询的rows和start,用来定义数量以及偏移量.&lt;/p&gt;&lt;h2 id=&quot;solr-ngroups&quot;&gt;&lt;a href=&quot;#solr-ngroups&quot; class=&quot;headerlink&quot; title=&quot;solr ngroups&quot;&gt;&lt;/a&gt;solr ngroups&lt;/h2&gt;&lt;p&gt;if true, includes the number of groups that have matched the query. Default is false&lt;/p&gt;&lt;p&gt;例如下面的查询语句:&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://127.0.0.1/solr_engine/select?q=name:test*&amp;amp;fl=feed_time&amp;amp;rows=50&amp;amp;wt=json&amp;amp;indent=true&amp;amp;group=true&amp;amp;group.field=name&amp;amp;group.offset=0&amp;amp;group.limit=5&amp;amp;group.ngroups=true&amp;amp;group.sort=feed_time%20desc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;返回的字段中xml中:&lt;/p&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grouped: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   name: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   matches: 1016709,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ngroups: 2477,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   groups: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;ngroups:2477就是分组的个数.&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Redis-SET命令&quot;&gt;&lt;a href=&quot;#Redis-SET命令&quot; class=&quot;headerlink&quot; title=&quot;Redis SET命令&quot;&gt;&lt;/a&gt;Redis SET命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
    
    </summary>
    
      <category term="随手记" scheme="http://trytofix.com/categories/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
    
      <category term="随手记" scheme="http://trytofix.com/tags/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>PicklingError: Can&#39;t pickle &lt;type &#39;function&#39;&gt;: attribute lookup __builtin__.function failed</title>
    <link href="http://trytofix.com/2016/04/20/PicklingError-Can-t-pickle-type-function-attribute-lookup-builtin-function-failed/"/>
    <id>http://trytofix.com/2016/04/20/PicklingError-Can-t-pickle-type-function-attribute-lookup-builtin-function-failed/</id>
    <published>2016-04-20T08:37:18.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;p&gt;在使用python multiprocessing的进程池时，遇到了如下问题，首先看示例代码:&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# encoding:utf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &lt;span class=&quot;string&quot;&gt;&#39;brianyang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; multiprocessing &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Pool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fetch_url&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;fetching: &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urls = [&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool = Pool(processes=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch_url_proxy = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: fetch_url(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; urls:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        results.append(pool.apply_async(fetch_url_proxy, (url,)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; result &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; results:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result.get()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;程序报错如下:&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/home/q/title/test.py&amp;quot;, line 23, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print result.get()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/usr/lib/python2.7/multiprocessing/pool.py&amp;quot;, line 558, in get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    raise self._value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cPickle.PicklingError: Can&amp;apos;t pickle &amp;lt;type &amp;apos;function&amp;apos;&amp;gt;: attribute lookup __builtin__.function failed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;原因在于lambda函数并不能被pickle数据持久化.&lt;/p&gt;&lt;p&gt;正确的方法是将方法放在线程池执行之前并定义为全局可访问的函数.例如将上例改为&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# encoding:utf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &lt;span class=&quot;string&quot;&gt;&#39;brianyang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; multiprocessing &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Pool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fetch_url&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;fetching: &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fetch_url_proxy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fetch_url(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urls = [&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool = Pool(processes=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; urls:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        results.append(pool.apply_async(fetch_url_proxy, (url,)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; result &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; results:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result.get()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/pickle.html#what-can-be-pickled-and-unpickled&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;可以被pickle数据持久化的类型&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The following types can be pickled:&lt;br&gt;None, True, and False&lt;br&gt;integers, long integers, floating point numbers, complex numbers&lt;br&gt;normal and Unicode strings&lt;br&gt;tuples, lists, sets, and dictionaries containing only picklable objects&lt;br&gt;functions defined at the top level of a module&lt;br&gt;built-in functions defined at the top level of a module&lt;br&gt;classes that are defined at the top level of a module&lt;br&gt;instances of such classes whose &lt;strong&gt;dict&lt;/strong&gt; or the result of calling &lt;strong&gt;getstate&lt;/strong&gt;() is picklable (see section The pickle protocol for details).&lt;br&gt;```&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;pickle不能持久化的类型包括但不限于lambda函数,内嵌函数等.&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;在使用python multiprocessing的进程池时，遇到了如下问题，首先看示例代码:&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# encoding:utf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &lt;span class=&quot;string&quot;&gt;&#39;brianyang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; multiprocessing &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Pool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fetch_url&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;fetching: &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urls = [&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool = Pool(processes=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch_url_proxy = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: fetch_url(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; urls:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        results.append(pool.apply_async(fetch_url_proxy, (url,)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; result &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; results:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result.get()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="多进程" scheme="http://trytofix.com/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>python multiprocessing</title>
    <link href="http://trytofix.com/2016/04/20/python-multiprocessing/"/>
    <id>http://trytofix.com/2016/04/20/python-multiprocessing/</id>
    <published>2016-04-20T07:32:16.000Z</published>
    <updated>2016-05-05T06:54:40.345Z</updated>
    
    <content type="html">&lt;blockquote&gt;&lt;p&gt;multiprocessing is a package that supports spawning processes using an API similar to the threading module. The multiprocessing package offers both local and remote concurrency, effectively side-stepping the Global Interpreter Lock by using subprocesses instead of threads. Due to this, the multiprocessing module allows the programmer to fully leverage multiple processors on a given machine. It runs on both Unix and Windows.&lt;/p&gt;&lt;p&gt;The multiprocessing module also introduces APIs which do not have analogs in the threading module. A prime example of this is the Pool object which offers a convenient means of parallelizing the execution of a function across multiple input values, distributing the input data across processes (data parallelism). The following example demonstrates the common practice of defining such functions in a module so that child processes can successfully import that module. This basic example of data parallelism using Pool,&lt;/p&gt;&lt;/blockquote&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;blockquote&gt;&lt;p&gt;来自官方介绍&lt;a href=&quot;https://docs.python.org/dev/library/multiprocessing.html#multiprocessing.pool.Pool&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;python支持使用threading模块进行多线程编程，但是python使用GIL全局解释器锁保证在同一时刻只有一个线程在运行．只有获得GIL的线程才可以使用python解释器执行代码．&lt;/p&gt;&lt;p&gt;GIL在保证线程安全的同时，牺牲了效率，在多核处理器普及的时代，GIL使得多线程不能很好的利用多核处理器处理数据．multiprocessing模块的出现，方便了使用python进行多进程编程．多进程既可以有效的利用多核处理器，也可以避免线程安全带来的问题．&lt;/p&gt;&lt;p&gt;使用线程还是进程，取决于你的程序要处理的业务:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CPU密集型 : CPU运算时间 &amp;gt;&amp;gt; IO处理时间&lt;br&gt;例如: 图片处理，数值计算&lt;br&gt;使用多进程,充分的利用多核CPU的计算能力.&lt;/li&gt;&lt;li&gt;IO密集型 : IO处理时间　&amp;gt;&amp;gt; CPU运算时间&lt;br&gt;例如: 爬虫抓取，读写数据库&lt;br&gt;使用多线程,某个线程IO阻塞时会释放GIL,其他线程可以获取GIL.&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; multiprocessing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pool = multiprocessing.Pool(processes=int(multiprocessing.cpu_count()*&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(param1=None, param2=None, param3=None)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#　复杂运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; items:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.apply_async(check, (&lt;span class=&quot;string&quot;&gt;&#39;param1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;param2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;param3&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pool.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pool.join()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用multiprocessing.Pool可以创建一个进程池，方便使用多进程编程．&lt;br&gt;注意先&lt;code&gt;pool.clese()&lt;/code&gt; 再&lt;code&gt;pool.join()&lt;/code&gt;等待进程都执行完成．&lt;br&gt;因为&lt;code&gt;pool.join()&lt;/code&gt;方法体为:&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        debug(&lt;span class=&quot;string&quot;&gt;&#39;joining pool&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; self._state &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (CLOSE, TERMINATE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self._worker_handler.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self._task_handler.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self._result_handler.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self._pool:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p.join()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在join前会判断线程池是否处于CLOSE(关闭)或者TERMINATE(终止)状态．&lt;/p&gt;&lt;p&gt;生产中的对大概100w条线路进行质量检测，使用单进程凌晨跑脚本，由于检测逻辑越来越复杂，导致检测时间一度达到26个小时，使用多进程，进程池大小为服务器核数的一半(16核)，将脚本检测时间降到了3个半小时．&lt;/p&gt;&lt;p&gt;多进程与多线程带来的收益曲线都是相似的，随着进程池的核数逐渐增大，带来的收益越来越小，当超过某一阈值时，甚至会降低收益．因此，要根据自己的程序调节多次后找到最优的进程池大小．&lt;/p&gt;&lt;p&gt;python使用threading进行多线程编程，如果熟悉了multiprocessing的api,可以使用multiprocessing.dummy来进行多线程编程．&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Support for the API of the multiprocessing package using threads&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;以线程池为例（在threading模块中是没有的哦~)&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; multiprocessing.dummy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Pool &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ThreadPool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;request_api&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#请求api&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urls = [&lt;span class=&quot;string&quot;&gt;&#39;trytofix.com&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pool = ThreadPool(processes=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; urls:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pool.apply_async(request_api, (url, ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pool.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pool.join()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;multiprocessing is a package that supports spawning processes using an API similar to the threading module. The multiprocessing package offers both local and remote concurrency, effectively side-stepping the Global Interpreter Lock by using subprocesses instead of threads. Due to this, the multiprocessing module allows the programmer to fully leverage multiple processors on a given machine. It runs on both Unix and Windows.&lt;/p&gt;&lt;p&gt;The multiprocessing module also introduces APIs which do not have analogs in the threading module. A prime example of this is the Pool object which offers a convenient means of parallelizing the execution of a function across multiple input values, distributing the input data across processes (data parallelism). The following example demonstrates the common practice of defining such functions in a module so that child processes can successfully import that module. This basic example of data parallelism using Pool,&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="并行" scheme="http://trytofix.com/tags/%E5%B9%B6%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>linux top</title>
    <link href="http://trytofix.com/2016/04/19/linux-top/"/>
    <id>http://trytofix.com/2016/04/19/linux-top/</id>
    <published>2016-04-19T07:28:47.000Z</published>
    <updated>2016-05-05T06:54:40.345Z</updated>
    
    <content type="html">&lt;p&gt;top用来实时的查看系统的状态.&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brianyang@brianyang-Latitude-E5440:~$ top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;--&amp;gt; uptime(uptime and load average)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top - 15:29:58 up  4:49, 10 users,  load average: 0.25, 0.22, 0.22  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;--&amp;gt; task&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tasks: 311 total,   1 running, 310 sleeping,   0 stopped,   0 zombie &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;--&amp;gt; cpu states&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%Cpu(s):  2.9 us,  0.6 sy,  0.0 ni, 96.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;--&amp;gt; memory usage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KiB Mem:   8080416 total,  4485820 used,  3594596 free,    73024 buffers &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KiB Swap:  8290300 total,     1276 used,  8289024 free.   856840 cached Mem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;--&amp;gt; ps -aux&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 6411 brianya+  20   0  617396  27444   8740 S   4.3  0.3   3:04.48 gnome-term+ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1405 root      20   0  490464 125592 105616 S   2.7  1.6   4:38.17 Xorg        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 6987 brianya+  20   0  805516 196004   9828 S   2.7  2.4   6:27.70 chrome      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 7359 brianya+  20   0 4203420 595400  14868 S   2.3  7.4  11:35.58 java        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 7134 root      20   0 3129444 182916  30948 S   2.0  2.3   5:03.40 LocalMan    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2802 rabbitmq  20   0 2175132  54292   1376 S   1.7  0.7   3:33.01 beam.smp    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    7 root      20   0       0      0      0 S   0.3  0.0   0:47.32 rcu_sched   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   11 root      20   0       0      0      0 S   0.3  0.0   0:27.32 rcuos/3     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1127 mysql     20   0  558828  51040    376 S   0.3  0.6   0:11.98 mysqld      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2130 root      20   0  623892  14408   3328 S   0.3  0.2   0:28.18 daomonit    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 4755 brianya+  20   0   20228    400    224 S   0.3  0.0   0:07.80 syndaemon   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 5038 brianya+  20   0    6088    412    164 S   0.3  0.0   0:03.58 xflux       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 5181 brianya+  20   0 2269936 326424  39096 S   0.3  4.0  10:46.65 chrome      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 5475 brianya+  20   0  803700  58916  10488 S   0.3  0.7   0:05.16 chrome      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 6738 brianya+  20   0  873444 102692  34920 S   0.3  1.3   1:34.48 chrome      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13492 root      20   0       0      0      0 S   0.3  0.0   0:03.62 kworker/3:2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15487 brianya+  20   0  933060 181636  46216 S   0.3  2.2   0:44.92 chrome      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%CPU -&amp;gt; CPU使用率&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%MEM -&amp;gt; 内存使用率&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMMAND -&amp;gt; 命令名或命令行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NI -&amp;gt; 任务优先级(负数&amp;gt;0&amp;gt;正数)(用户层面)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PID -&amp;gt; 进程id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PR -&amp;gt; 进程实际优先级 一般情况,PR=NI+20(内核层面)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RES -&amp;gt; 物理内存使用量(kb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S -&amp;gt; 进程状态(R -&amp;gt; Running, S -&amp;gt; sleeping, Z -&amp;gt; zombie ...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;快捷键：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;shift+p: 按照cpu使用率排序&lt;/li&gt;&lt;li&gt;shift+m: 按照内存使用率排序&lt;/li&gt;&lt;li&gt;shift+t: 按照cpu使用时间排序&lt;/li&gt;&lt;li&gt;c : 显示command详情&lt;/li&gt;&lt;li&gt;z 或 -b :　将状态为running的进程突出显示&lt;/li&gt;&lt;li&gt;k : kill pid 杀死进程&lt;/li&gt;&lt;li&gt;s : 设置刷新时间&lt;/li&gt;&lt;/ul&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;top用来实时的查看系统的状态.&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://trytofix.com/categories/Linux/"/>
    
    
      <category term="Linux Command" scheme="http://trytofix.com/tags/Linux-Command/"/>
    
  </entry>
  
  <entry>
    <title>随手记</title>
    <link href="http://trytofix.com/2016/04/13/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    <id>http://trytofix.com/2016/04/13/随手记/</id>
    <published>2016-04-13T05:16:43.000Z</published>
    <updated>2016-05-05T06:54:40.345Z</updated>
    
    <content type="html">&lt;h1 id=&quot;启动docker图片ocr服务&quot;&gt;&lt;a href=&quot;#启动docker图片ocr服务&quot; class=&quot;headerlink&quot; title=&quot;启动docker图片ocr服务&quot;&gt;&lt;/a&gt;启动docker图片ocr服务&lt;/h1&gt;&lt;p&gt;sudo docker run –env TESSDATA_PREFIX=/tseract-ocr -it -p 23456:23456 d009 python image_upload_web_tool/ocr_image_web.py&lt;/p&gt;&lt;h1 id=&quot;docker设置环境变量&quot;&gt;&lt;a href=&quot;#docker设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;docker设置环境变量&quot;&gt;&lt;/a&gt;docker设置环境变量&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--env &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;linux查看cpu核数&quot;&gt;&lt;a href=&quot;#linux查看cpu核数&quot; class=&quot;headerlink&quot; title=&quot;linux查看cpu核数&quot;&gt;&lt;/a&gt;linux查看cpu核数&lt;/h1&gt;&lt;p&gt;cat /proc/cpuinfo |grep processor|wc|awk ‘{print $1}’&lt;/p&gt;&lt;h1 id=&quot;load-average&quot;&gt;&lt;a href=&quot;#load-average&quot; class=&quot;headerlink&quot; title=&quot;load average&quot;&gt;&lt;/a&gt;load average&lt;/h1&gt;&lt;p&gt;load average: 0.75, 1.56, 2.76&lt;br&gt;分别对应的时间是:1分钟,5分钟,15分钟．&lt;/p&gt;&lt;h1 id=&quot;python-datetime-格式化时间&quot;&gt;&lt;a href=&quot;#python-datetime-格式化时间&quot; class=&quot;headerlink&quot; title=&quot;python datetime 格式化时间&quot;&gt;&lt;/a&gt;python datetime 格式化时间&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;]: datetime.now().strftime(&lt;span class=&quot;string&quot;&gt;&#39;%Y_%m_%d %H:%m:%S&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;]: &lt;span class=&quot;string&quot;&gt;&#39;2016_04_13 17:04:12&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;ssh登陆问题&quot;&gt;&lt;a href=&quot;#ssh登陆问题&quot; class=&quot;headerlink&quot; title=&quot;ssh登陆问题&quot;&gt;&lt;/a&gt;ssh登陆问题&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;ssh_exchange_identification: Connection closed by remote host&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;一般可能是登陆机器超过限制,比如同一机房登陆机器超过x台.&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rm -f ~/.ssh/persist/*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;python-base64编码-解码&quot;&gt;&lt;a href=&quot;#python-base64编码-解码&quot; class=&quot;headerlink&quot; title=&quot;python base64编码/解码&quot;&gt;&lt;/a&gt;python base64编码/解码&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = &lt;span class=&quot;string&quot;&gt;&#39;测试一下，哇哈哈，哇哈哈，哇哈哈，不够长，再长一点．&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; base64.encodestring(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;rWL6K+V5LiA5LiL77yM5ZOH5ZOI5ZOI77yM5ZOH5ZOI5ZOI77yM5ZOH5ZOI5ZOI77yM5LiN5aSf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;ZW/&lt;span class=&quot;number&quot;&gt;77&lt;/span&gt;yM5YaN6ZW/&lt;span class=&quot;number&quot;&gt;5L&lt;/span&gt;iA54K577yO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; base64.standard_b64encode(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;rWL6K+V5LiA5LiL77yM5ZOH5ZOI5ZOI77yM5ZOH5ZOI5ZOI77yM5ZOH5ZOI5ZOI77yM5LiN5aSf6ZW/&lt;span class=&quot;number&quot;&gt;77&lt;/span&gt;yM5YaN6ZW/&lt;span class=&quot;number&quot;&gt;5L&lt;/span&gt;iA54K577yO&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;base64 encodestring和standard_b64encode都可以使用base64编码，其中前者将base64编码后的内容使用\n进行换行分隔，而后者返回的是一个无换行的字符串．&lt;/p&gt;&lt;p&gt;base64.encode/decode可以对文件进行编码/解码.&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;base64.encode(open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;), open(&lt;span class=&quot;string&quot;&gt;&#39;base64_hello.txt&#39;&lt;/span&gt; ,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brianyang@brianyang-Latitude-E5440:~/Documents$ cat hello.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello brian&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brianyang@brianyang-Latitude-E5440:~/Documents$ cat base64_hello.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aGVsbG8gYnJpYW4K&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编码后的文件存入了&lt;code&gt;base64_hello.txt&lt;/code&gt;中&lt;/p&gt;&lt;h1 id=&quot;python获取当前进程id&quot;&gt;&lt;a href=&quot;#python获取当前进程id&quot; class=&quot;headerlink&quot; title=&quot;python获取当前进程id&quot;&gt;&lt;/a&gt;python获取当前进程id&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; os.getpid()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;启动docker图片ocr服务&quot;&gt;&lt;a href=&quot;#启动docker图片ocr服务&quot; class=&quot;headerlink&quot; title=&quot;启动docker图片ocr服务&quot;&gt;&lt;/a&gt;启动docker图片ocr服务&lt;/h1&gt;&lt;p&gt;sudo docker run –e
    
    </summary>
    
      <category term="随手记" scheme="http://trytofix.com/categories/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Fabric简化Python发布流程</title>
    <link href="http://trytofix.com/2016/04/11/Fabric%E7%AE%80%E5%8C%96Python%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B/"/>
    <id>http://trytofix.com/2016/04/11/Fabric简化Python发布流程/</id>
    <published>2016-04-11T11:57:56.000Z</published>
    <updated>2016-05-05T06:54:40.333Z</updated>
    
    <content type="html">&lt;p&gt;Python通用发布流程：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;git checkout - b workspace&lt;/li&gt;&lt;li&gt;编写逻辑&lt;/li&gt;&lt;li&gt;git add &amp;amp;&amp;amp; git commit &amp;amp;&amp;amp; git push&lt;/li&gt;&lt;li&gt;ssh登陆服务器&lt;/li&gt;&lt;li&gt;git pull&lt;/li&gt;&lt;li&gt;启动脚本&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在每次修改代码之后，都需要执行git提交，登陆服务器，更新代码，启动代码．登陆服务器，更新代码是一项重复枯燥无味的工作．&lt;/p&gt;&lt;p&gt;python使用Fabric可以轻松的在本地用Pythonic的方式完成ssh连接和执行shell命令．快速入门&lt;/p&gt;&lt;p&gt;安装方法：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install fabric&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以web开发为例，将更新的web代码提交到git,在服务器端通过git更新代码，并重启uwsgi服务器，fabric代码如下：&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#fabfile.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &lt;span class=&quot;string&quot;&gt;&#39;brianyang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fabric.api &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; local, settings, abort, cd, run, env, lcd, task&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fabric.contrib.console &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; confirm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fabric.network &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh.util.log_to_file(&lt;span class=&quot;string&quot;&gt;&quot;paramiko.log&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env.hosts = [&lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;]　　　&lt;span class=&quot;comment&quot;&gt;#服务器地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env.user = &lt;span class=&quot;string&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env.key_filename = &lt;span class=&quot;string&quot;&gt;&quot;~/Documents/why.pem&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#ssh私钥文件地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#本地提交代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;commit_code&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code_dir = &lt;span class=&quot;string&quot;&gt;&quot;/home/q/blog&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; settings(warn_only=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; lcd(code_dir):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = local(&lt;span class=&quot;string&quot;&gt;&quot;git pull origin master&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result.failed &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; confirm(&lt;span class=&quot;string&quot;&gt;&quot;Pull failed, continue?&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                abort(&lt;span class=&quot;string&quot;&gt;&quot;abort!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            local(&lt;span class=&quot;string&quot;&gt;&quot;git add .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            local(&lt;span class=&quot;string&quot;&gt;&quot;git commit -m &#39;auto commit&#39;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            local(&lt;span class=&quot;string&quot;&gt;&quot;git push origin master&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#服务器发布代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deploy_server&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code_dir = &lt;span class=&quot;string&quot;&gt;&quot;/home/q/blog&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; settings(warn_only=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; cd(code_dir):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            run(&lt;span class=&quot;string&quot;&gt;&quot;sudo git pull origin master&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = run(&lt;span class=&quot;string&quot;&gt;&quot;sudo uwsgi --ini conf/uwsgi.conf  --reload pidfile&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result.failed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                run(&lt;span class=&quot;string&quot;&gt;&quot;sudo ps -ef|grep uwsgi&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                run(＂＂＂sudo ps -ef|grep &lt;span class=&quot;string&quot;&gt;&quot;\-\-ini conf/uwsgi.conf&quot;&lt;/span&gt;|awk -F &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;|xargs sudo kill &lt;span class=&quot;number&quot;&gt;-9&lt;/span&gt;＂＂＂)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = run(&lt;span class=&quot;string&quot;&gt;&quot;sudo uwsgi --ini conf/uwsgi.conf&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result.failed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;launch failed&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;＃发布入口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@task(alias=&quot;install&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commit_code()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    deploy_server()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;执行fab install或者fab deploy结果如下：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] Executing task &amp;apos;install&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[localhost] local: git pull origin master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来自 github.com:brianfordream/blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * branch master -&amp;gt; FETCH_HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Already up-to-date.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[localhost] local: git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[localhost] local: git commit -m &amp;apos;auto commit&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;位于分支 master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;无文件要提交，干净的工作区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Warning: local() encountered an error (return code 1) while executing &amp;apos;git commit -m &amp;apos;auto commit&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[localhost] local: git push origin master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Everything up-to-date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] run: sudo git pull origin master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] out: From https://github.com/brianfordream/blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] out: * branch master -&amp;gt; FETCH_HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] out: Already up-to-date.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] out: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] run: sudo uwsgi --ini conf/uwsgi.conf --reload pidfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] out: [uWSGI] getting INI configuration from conf/uwsgi.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[127.0.0.1] out: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Disconnecting from 127.0.0.1... done.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过fabric可以方便的在本地对本地和服务器执行shell操作，简化了发布过程．&lt;/p&gt;&lt;p&gt;注:env.use_ssh_config = True　#使用系统ssh配置&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Python通用发布流程：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;git checkout - b workspace&lt;/li&gt;&lt;li&gt;编写逻辑&lt;/li&gt;&lt;li&gt;git add &amp;amp;&amp;amp; git commit &amp;amp;&amp;amp; git push&lt;/li&gt;&lt;li&gt;ssh登陆服务器&lt;/li&gt;&lt;li&gt;git pull&lt;/li&gt;&lt;li&gt;启动脚本&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在每次修改代码之后，都需要执行git提交，登陆服务器，更新代码，启动代码．登陆服务器，更新代码是一项重复枯燥无味的工作．&lt;/p&gt;&lt;p&gt;python使用Fabric可以轻松的在本地用Pythonic的方式完成ssh连接和执行shell命令．快速入门&lt;/p&gt;&lt;p&gt;安装方法：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install fabric&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以web开发为例，将更新的web代码提交到git,在服务器端通过git更新代码，并重启uwsgi服务器，fabric代码如下：&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#fabfile.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &lt;span class=&quot;string&quot;&gt;&#39;brianyang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fabric.api &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; local, settings, abort, cd, run, env, lcd, task&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fabric.contrib.console &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; confirm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; fabric.network &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh.util.log_to_file(&lt;span class=&quot;string&quot;&gt;&quot;paramiko.log&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env.hosts = [&lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;]　　　&lt;span class=&quot;comment&quot;&gt;#服务器地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env.user = &lt;span class=&quot;string&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env.key_filename = &lt;span class=&quot;string&quot;&gt;&quot;~/Documents/why.pem&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#ssh私钥文件地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#本地提交代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;commit_code&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code_dir = &lt;span class=&quot;string&quot;&gt;&quot;/home/q/blog&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; settings(warn_only=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; lcd(code_dir):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = local(&lt;span class=&quot;string&quot;&gt;&quot;git pull origin master&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result.failed &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; confirm(&lt;span class=&quot;string&quot;&gt;&quot;Pull failed, continue?&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                abort(&lt;span class=&quot;string&quot;&gt;&quot;abort!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            local(&lt;span class=&quot;string&quot;&gt;&quot;git add .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            local(&lt;span class=&quot;string&quot;&gt;&quot;git commit -m &#39;auto commit&#39;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            local(&lt;span class=&quot;string&quot;&gt;&quot;git push origin master&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#服务器发布代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deploy_server&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code_dir = &lt;span class=&quot;string&quot;&gt;&quot;/home/q/blog&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; settings(warn_only=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; cd(code_dir):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            run(&lt;span class=&quot;string&quot;&gt;&quot;sudo git pull origin master&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = run(&lt;span class=&quot;string&quot;&gt;&quot;sudo uwsgi --ini conf/uwsgi.conf  --reload pidfile&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result.failed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                run(&lt;span class=&quot;string&quot;&gt;&quot;sudo ps -ef|grep uwsgi&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                run(＂＂＂sudo ps -ef|grep &lt;span class=&quot;string&quot;&gt;&quot;\-\-ini conf/uwsgi.conf&quot;&lt;/span&gt;|awk -F &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;|xargs sudo kill &lt;span class=&quot;number&quot;&gt;-9&lt;/span&gt;＂＂＂)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = run(&lt;span class=&quot;string&quot;&gt;&quot;sudo uwsgi --ini conf/uwsgi.conf&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result.failed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;launch failed&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;＃发布入口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@task(alias=&quot;install&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commit_code()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    deploy_server()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="fabric" scheme="http://trytofix.com/tags/fabric/"/>
    
  </entry>
  
  <entry>
    <title>测试谷歌地图</title>
    <link href="http://trytofix.com/2016/04/06/%E6%B5%8B%E8%AF%95%E8%B0%B7%E6%AD%8C%E5%9C%B0%E5%9B%BE/"/>
    <id>http://trytofix.com/2016/04/06/测试谷歌地图/</id>
    <published>2016-04-06T12:42:09.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;p&gt;我在:&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;div id=&quot;googleMap5305&quot; style=&quot;height:500px;width:100%;margin:0;padding:0&quot;&gt;&lt;/div&gt;&lt;style&gt;.gmnoprint img{max-width:none!important}&lt;/style&gt;&lt;script defer&gt;function makeMaps(){for(var o in window.hexoGmaps.maps)console.log(&quot;map #&quot;,o),window.hexoGmaps.maps[o]()}function loadScript(){window.hexoGmaps.googleScriptLoaded=!0;var o=document.createElement(&quot;script&quot;);o.type=&quot;text/javascript&quot;,o.src=&quot;http://www.google.cn/maps/api/js?key=AIzaSyAA2ThKRTD8tK4nl9s-AOP67u3GHsiz2RM&amp;v=3.exp&amp;callback=makeMaps&quot;,document.body.appendChild(o)}window.hexoGmaps=window.hexoGmaps||{maps:{}},window.hexoGmaps.maps.initgoogleMap5305=function(){var o={scrollwheel:!0,zoom:17,center:new window.google.maps.LatLng(39.9782805252,116.315163067)},e=document.getElementById(&quot;googleMap5305&quot;),a=new window.google.maps.Map(e,o),n={position:new window.google.maps.LatLng(39.9782805252,116.315163067),map:a,title:&quot;新中关购物中心&quot;,zIndex:0,icon:&quot;&quot;};new window.google.maps.Marker(n)},window.hexoGmaps.googleScriptLoaded||loadScript()&lt;/script&gt;&lt;p&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;我在:&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://trytofix.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>使用七牛为静态资源加速-脚本自动完成</title>
    <link href="http://trytofix.com/2016/04/06/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%B8%BA%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8A%A0%E9%80%9F-%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%AE%8C%E6%88%90/"/>
    <id>http://trytofix.com/2016/04/06/使用七牛为静态资源加速-脚本自动完成/</id>
    <published>2016-04-06T09:12:58.000Z</published>
    <updated>2016-05-05T06:54:40.349Z</updated>
    
    <content type="html">&lt;p&gt;hexo生成的都是静态文件,除了文章内容之外,大部分都是各种主题需要的js,css文件,如果将博客部署在github上,由于某些众所周知的原因,导致github下载速度非常慢,那么这些静态资源文件将会降低用户体验.&lt;/p&gt;&lt;p&gt;一个优化方法就是将博客部署在github上,而js,css等静态资源文件部署在国内的cdn上.七牛是一款使用广泛的存储空间,普通用户每月都会有免费额度,更关键的是,提供了多种语言的api,方便自动化管理.&lt;/p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;以本博客为例,通过&lt;code&gt;hexo g&lt;/code&gt;生成的静态文件位于public文件下:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;public/vendor&lt;/li&gt;&lt;li&gt;public/css&lt;/li&gt;&lt;li&gt;public/js&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f2n4h3zyntj208t08daaj&quot; alt=&quot;hexo_qiniu_1.png&quot;&gt;&lt;/p&gt;&lt;p&gt;在主题中引用这些文件的部分代码如下:&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;head.ejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&#39;&lt;span class=&quot;attr&quot;&gt;vendor&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;open-sans&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;styles&lt;/span&gt;&#39;+&#39;&lt;span class=&quot;attr&quot;&gt;.css&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&#39;&lt;span class=&quot;attr&quot;&gt;vendor&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;source-code-pro&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;styles&lt;/span&gt;&#39;+&#39;&lt;span class=&quot;attr&quot;&gt;.css&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&#39;&lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;&#39;+&#39;&lt;span class=&quot;attr&quot;&gt;.css&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;对静态资源的引用走的依然是当前主机下的流量,当部署在github上时,加载静态资源非常慢.&lt;/p&gt;&lt;p&gt;以public/js/main.js为例进行说明:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;默认访问地址:&lt;code&gt;http://trytofix.com/js/main.js&lt;/code&gt; 由于机器部署在github上,实际是从github上加载main.js.在我这里平均用时180-200ms之间.&lt;/li&gt;&lt;li&gt;使用cdn地址: &lt;code&gt;http://7xiego.com1.z0.glb.clouddn.com/js/main.js&lt;/code&gt;,平均用时40-50ms.&lt;br&gt;使用cdn不仅访问速度明显提升,而且七牛还可以设置静态资源文件的缓存时间,通过在用户浏览器缓存静态资源文件加快网站的访问.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下面将这些静态资源放到七牛中&lt;/p&gt;&lt;p&gt;根据七牛提供的api,编写上传静态文件的代码如下:&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# encoding:utf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &lt;span class=&quot;string&quot;&gt;&#39;brianyang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; qiniu &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Auth, put_file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_key = &lt;span class=&quot;string&quot;&gt;&#39;your access key&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secret_key = &lt;span class=&quot;string&quot;&gt;&#39;your secret key&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q = Auth(access_key, secret_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bucket_name = &lt;span class=&quot;string&quot;&gt;&#39;your bucket name&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vendor_dir = &lt;span class=&quot;string&quot;&gt;&#39;public/vendor&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;css_dir = &lt;span class=&quot;string&quot;&gt;&#39;public/css&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js_dir = &lt;span class=&quot;string&quot;&gt;&#39;public/js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;list_file&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(file_path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; path &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; os.listdir(file_path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        full_path = os.path.join(file_path, path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; os.path.isfile(full_path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            key = re.sub(&lt;span class=&quot;string&quot;&gt;r&quot;.*?public/&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, full_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            token = q.upload_token(bucket_name, key, &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret, info = put_file(token, key, full_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; os.path.isdir(full_path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            list_file(full_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list_file(vendor_dir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list_file(css_dir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list_file(js_dir)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;注意: 本地文件&lt;code&gt;/public/a/b/c/d.css&lt;/code&gt;上传到七牛,对应的文件名为&lt;code&gt;a/b/c/d.css&lt;/code&gt;,通过七牛给你的个性化地址+七牛文件名进行访问.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;下面修改hexo主题的几个地方,以便可以使用cdn.&lt;/p&gt;&lt;p&gt;修改主题的_config.yml,添加&lt;/p&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cdn_prefix: http://your.qiniu.glb.clouddn.com/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意,这里的cdn_prefix请换成自己申请的七牛地址,还有最后一个&lt;code&gt;/&lt;/code&gt;一定不要忘记,如果不使用cdn,则置空即可.&lt;/p&gt;&lt;p&gt;修改主题下的layout中的引入css和js的文件,例如head.ejs中与本文开始对应的三行修改为&lt;/p&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;attr&quot;&gt;theme.cdn_prefix&lt;/span&gt;+&#39;&lt;span class=&quot;attr&quot;&gt;vendor&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;open-sans&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;styles&lt;/span&gt;&#39;+&#39;&lt;span class=&quot;attr&quot;&gt;.css&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;attr&quot;&gt;theme.cdn_prefix&lt;/span&gt;+&#39;&lt;span class=&quot;attr&quot;&gt;vendor&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;source-code-pro&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;styles&lt;/span&gt;&#39;+&#39;&lt;span class=&quot;attr&quot;&gt;.css&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;attr&quot;&gt;theme.cdn_prefix&lt;/span&gt;+&#39;&lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;&#39;+&#39;&lt;span class=&quot;attr&quot;&gt;.css&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样做的好处是,当需要更换cdn时,仅需修改_config.yml中的cdn_prefix就可以了.&lt;/p&gt;&lt;p&gt;如果的你的网站在国内备案了,通过上面的脚本,甚至可以全站上传到七牛,通过cdn来加速全站,效果更佳.&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;hexo生成的都是静态文件,除了文章内容之外,大部分都是各种主题需要的js,css文件,如果将博客部署在github上,由于某些众所周知的原因,导致github下载速度非常慢,那么这些静态资源文件将会降低用户体验.&lt;/p&gt;&lt;p&gt;一个优化方法就是将博客部署在github上,而js,css等静态资源文件部署在国内的cdn上.七牛是一款使用广泛的存储空间,普通用户每月都会有免费额度,更关键的是,提供了多种语言的api,方便自动化管理.&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="cdn加速" scheme="http://trytofix.com/tags/cdn%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>hexo添加404页面</title>
    <link href="http://trytofix.com/2016/04/06/hexo%E6%B7%BB%E5%8A%A0404%E9%A1%B5%E9%9D%A2/"/>
    <id>http://trytofix.com/2016/04/06/hexo添加404页面/</id>
    <published>2016-04-06T09:01:43.000Z</published>
    <updated>2016-05-05T06:54:40.349Z</updated>
    
    <content type="html">&lt;p&gt;为部署在github上的hexo添加自定义的404页面&lt;/p&gt;&lt;p&gt;在source下新建404.html&lt;/p&gt;&lt;p&gt;实现404页面到首页自动跳转,404.html内容如下:&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;refresh&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;2;url=/&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;404&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;页面没有找到,跳转到主页...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://ww1.sinaimg.cn/small/b8b708a7gw1f2n307j0vlj206l064dfs.jpg&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;打开&lt;a href=&quot;http://trytofix.com/404&quot;&gt;本站404效果&lt;/a&gt;查看效果吧!&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;为部署在github上的hexo添加自定义的404页面&lt;/p&gt;&lt;p&gt;在source下新建404.html&lt;/p&gt;&lt;p&gt;实现404页面到首页自动跳转,404.html内容如下:&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
    
    </summary>
    
      <category term="hexo" scheme="http://trytofix.com/categories/hexo/"/>
    
    
      <category term="404" scheme="http://trytofix.com/tags/404/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用新浪微博图床自动部署</title>
    <link href="http://trytofix.com/2016/04/06/hexo%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
    <id>http://trytofix.com/2016/04/06/hexo使用新浪微博图床自动部署/</id>
    <published>2016-04-06T08:00:55.000Z</published>
    <updated>2016-05-05T06:54:40.349Z</updated>
    
    <content type="html">&lt;p&gt;使用新浪微博图床请先参考之前两篇文章:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;/2016/04/06/python模拟微博登陆/&quot;&gt;python模拟微博登陆&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;/2016/04/06/使用新浪微博图床/&quot;&gt;使用新浪微博图床&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自动部署涉及到以下文章:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;/2016/03/30/Linux-expect-与交互程序对话/&quot;&gt;Linux-expect-与交互程序对话&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/trytofix/hexo_weibo_image&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;代码地址&lt;/a&gt;&lt;/p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;工程中的文件包括:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;deploy.py 自动部署入口 &lt;code&gt;python deploy.py&lt;/code&gt; 启动自动部署&lt;/li&gt;&lt;li&gt;expect.sh github自动部署&lt;/li&gt;&lt;li&gt;image.db 新浪图床db&lt;/li&gt;&lt;li&gt;install.sh hexo自动部署&lt;/li&gt;&lt;li&gt;weibo_util.py 微博模拟登陆+图床&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Linux + hexo + python + github运行环境可以直接clone工程到本地,将工程中的文件拷贝到hexo博客的根目录,例如/home/hexo/blog下,修改expect.sh中的用户名密码为自己的github的用户名密码,随后运行python deploy.py,输入新浪微博用户名和密码就可以将博客一键部署到github,并将博文中的图片替换为新浪图床的图片,示例网站:&lt;a href=&quot;http://trytofix.com&quot;&gt;http://trytofix.com&lt;/a&gt;. 其他环境的用户,可根据下面对每个文件的解释,各取所需.&lt;/p&gt;&lt;p&gt;Linux 需要安装expect, &lt;code&gt;sudo apt-get install expect&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;weibo-util-py-用来模拟登陆微博-将本地图片上传到新浪图床-并获取图床的链接&quot;&gt;&lt;a href=&quot;#weibo-util-py-用来模拟登陆微博-将本地图片上传到新浪图床-并获取图床的链接&quot; class=&quot;headerlink&quot; title=&quot;weibo_util.py 用来模拟登陆微博,将本地图片上传到新浪图床,并获取图床的链接.&quot;&gt;&lt;/a&gt;weibo_util.py 用来模拟登陆微博,将本地图片上传到新浪图床,并获取图床的链接.&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; get_image(&lt;span class=&quot;string&quot;&gt;&#39;/home/q/hexo/blog/source/img/angular-remove-table-item.jpg&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;修改get_image()中的路径为本机电脑上的路径,随后python weibo_util.py就可以查看效果,第一次使用,会提示输入新浪微博的用户名和密码,程序运行成功后返回图床的url地址.&lt;/p&gt;&lt;h3 id=&quot;install-sh-一个简单的发布脚本-集成了hexo发布的三个步骤-clean-generate-deploy-注意最后一行的expect-sh-介绍在下面&quot;&gt;&lt;a href=&quot;#install-sh-一个简单的发布脚本-集成了hexo发布的三个步骤-clean-generate-deploy-注意最后一行的expect-sh-介绍在下面&quot; class=&quot;headerlink&quot; title=&quot;install.sh 一个简单的发布脚本,集成了hexo发布的三个步骤: clean, generate, deploy,注意最后一行的expect.sh,介绍在下面.&quot;&gt;&lt;/a&gt;install.sh 一个简单的发布脚本,集成了hexo发布的三个步骤: clean, generate, deploy,注意最后一行的expect.sh,介绍在下面.&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./expect.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;expect-sh-部署hexo到github时-需要输入用户名和密码-使用expect可以自动输入用户名和密码-将&quot;&gt;&lt;a href=&quot;#expect-sh-部署hexo到github时-需要输入用户名和密码-使用expect可以自动输入用户名和密码-将&quot; class=&quot;headerlink&quot; title=&quot;expect.sh 部署hexo到github时,需要输入用户名和密码,使用expect可以自动输入用户名和密码,将&quot;&gt;&lt;/a&gt;expect.sh 部署hexo到github时,需要输入用户名和密码,使用expect可以自动输入用户名和密码,将&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;set user yourusername&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set pass yourpassword&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;替换为自己的github的用户名和密码.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果不需要将博客部署到github,请在install.sh中注释./expect.sh或替换为hexo d&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;deploy-py部署hexo博客&quot;&gt;&lt;a href=&quot;#deploy-py部署hexo博客&quot; class=&quot;headerlink&quot; title=&quot;deploy.py部署hexo博客&quot;&gt;&lt;/a&gt;deploy.py部署hexo博客&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;将_posts下的文章备份&lt;/li&gt;&lt;li&gt;遍历所有的文章,找到&lt;code&gt;![image_alt](image_url)&lt;/code&gt;标准markdown格式的image_url,其中image_url的格式应为’/img/xxx.jpg’,位于source/img下&lt;/li&gt;&lt;li&gt;通过weibo_util获取改图片的图床地址并替换&lt;/li&gt;&lt;li&gt;执行install.sh,生成图片地址为图床地址的博客页面&lt;/li&gt;&lt;li&gt;将文章备份替换回来,_posts下的文章中的图片仍为markdown格式.&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;为了避免每次部署时,都生成新的图床url(浪费资源可耻,感谢新浪无私的没有做防盗链限制),在部署时,将图片做md5计算,将md5与新浪图床url存入map,最后使用json持久化到文件中(image.db),每次部署先查看md5是否存在map中,如果存在,则直接取md5对应的value值,否则,获取图床地址并存入image.db.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;image-db存放图片md5与图床url对应关系的json数据库&quot;&gt;&lt;a href=&quot;#image-db存放图片md5与图床url对应关系的json数据库&quot; class=&quot;headerlink&quot; title=&quot;image.db存放图片md5与图床url对应关系的json数据库&quot;&gt;&lt;/a&gt;image.db存放图片md5与图床url对应关系的json数据库&lt;/h3&gt;&lt;p&gt;感谢新浪提供的图床,避免相同的图片每次都生成新的图床地址,浪费资源.&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;使用新浪微博图床请先参考之前两篇文章:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;/2016/04/06/python模拟微博登陆/&quot;&gt;python模拟微博登陆&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;/2016/04/06/使用新浪微博图床/&quot;&gt;使用新浪微博图床&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自动部署涉及到以下文章:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;/2016/03/30/Linux-expect-与交互程序对话/&quot;&gt;Linux-expect-与交互程序对话&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/trytofix/hexo_weibo_image&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;代码地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="hexo一键部署" scheme="http://trytofix.com/tags/hexo%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>使用新浪微博图床</title>
    <link href="http://trytofix.com/2016/04/06/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/"/>
    <id>http://trytofix.com/2016/04/06/使用新浪微博图床/</id>
    <published>2016-04-06T07:22:30.000Z</published>
    <updated>2016-05-05T06:54:40.349Z</updated>
    
    <content type="html">&lt;p&gt;首先感谢新浪微博提供的免费图床(对外链无限制),以及吊炸天的cdn图片加速服务,从此妈妈再也不用担心我的图床不能用了.&lt;/p&gt;&lt;h3 id=&quot;图床原理&quot;&gt;&lt;a href=&quot;#图床原理&quot; class=&quot;headerlink&quot; title=&quot;图床原理:&quot;&gt;&lt;/a&gt;图床原理:&lt;/h3&gt;&lt;p&gt;访问&lt;code&gt;http://weibo.com/minipublish&lt;/code&gt;&lt;/p&gt;&lt;p&gt;使用新浪微博账号登陆&lt;/p&gt;&lt;p&gt;进入到发微博的界面:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f2n1zyhpanj20dr085aaw&quot; alt=&quot;weibo_upload_image_1&quot;&gt;&lt;/p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;p&gt;点击下方的上传图片按钮,并上传本地图片,上传成功后,会在下方出现一张预览图,打开控制台找到这张图片的url,这就是新浪图床的url.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;不需要发布微博,图片只要上传就会存在于图床中&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f2n1zyweqaj211u0jfqa7&quot; alt=&quot;weibo_upload_image_2&quot;&gt;&lt;/p&gt;&lt;p&gt;手动上传图片,获取地址,非常繁琐.在这里使用python写了一个上传本地图片并返回图床url的脚本,在使用前,请参看另一篇博客&lt;a href=&quot;/2016/04/06/python模拟微博登陆/&quot;&gt;python模拟微博登陆&lt;/a&gt;,介绍了如何使用python登陆新浪微博并保存cookie.&lt;/p&gt;&lt;p&gt;在获取到cookie后,就可以使用cookie上传图片,代码如下:&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;request_image_url&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(image_path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cookie = cookielib.MozillaCookieJar()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cookie.load(cookie_file, ignore_expires=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, ignore_discard=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cookie))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image_url = &lt;span class=&quot;string&quot;&gt;&#39;http://picupload.service.weibo.com/interface/pic_upload.php?mime=image%2Fjpeg&amp;amp;data=base64&amp;amp;url=0&amp;amp;markpos=1&amp;amp;logo=&amp;amp;nick=0&amp;amp;marks=1&amp;amp;app=miniblog&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = base64.b64encode(file(image_path).read())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data = urllib.urlencode(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;b64_data&#39;&lt;/span&gt;: b&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = opener.open(image_url, data).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = re.sub(&lt;span class=&quot;string&quot;&gt;r&quot;&amp;lt;meta.*&amp;lt;/script&amp;gt;&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image_result = json.loads(result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image_id = image_result.get(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;).get(&lt;span class=&quot;string&quot;&gt;&#39;pics&#39;&lt;/span&gt;).get(&lt;span class=&quot;string&quot;&gt;&#39;pic_1&#39;&lt;/span&gt;).get(&lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;http://ww3.sinaimg.cn/large/%s&#39;&lt;/span&gt; % image_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_image&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(image_path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url = request_image_url(image_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            username = raw_input(&lt;span class=&quot;string&quot;&gt;&quot;输入新浪微博用户名：&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            password = raw_input(&lt;span class=&quot;string&quot;&gt;&quot;输入新浪微博密码：&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nonce, pubkey, servertime, rsakv = pre_login()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            form_data = generate_form_data(nonce, pubkey, servertime, rsakv, username, password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            login(form_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url = request_image_url(image_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;登录失败,程序退出&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; get_image(&lt;span class=&quot;string&quot;&gt;&#39;/home/q/hexo/blog/source/img/angular-remove-table-item.jpg&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;代码运行结果如下:&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/python2.7 /home/q/hexo/blog/weibo_util.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输入新浪微博用户名： yourusername&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输入新浪微博密码：yourpassword&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http://ww3.sinaimg.cn/large/b8b708a7gw1f2n0udn29tj210b0b0jsn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输出就是新浪图床的地址.换成你的本地文件来试一试吧.&lt;/p&gt;&lt;p&gt;完整的代码包括了模拟新浪微博登陆,保存cookie,上传本地图片到新浪微博图床并获取图床地址.&lt;/p&gt;&lt;p&gt;完整的代码请参照:&lt;a href=&quot;https://github.com/trytofix/hexo_weibo_image/blob/master/weibo_util.py&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;模拟微博登陆并获取图床地址&lt;/a&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;首先感谢新浪微博提供的免费图床(对外链无限制),以及吊炸天的cdn图片加速服务,从此妈妈再也不用担心我的图床不能用了.&lt;/p&gt;&lt;h3 id=&quot;图床原理&quot;&gt;&lt;a href=&quot;#图床原理&quot; class=&quot;headerlink&quot; title=&quot;图床原理:&quot;&gt;&lt;/a&gt;图床原理:&lt;/h3&gt;&lt;p&gt;访问&lt;code&gt;http://weibo.com/minipublish&lt;/code&gt;&lt;/p&gt;&lt;p&gt;使用新浪微博账号登陆&lt;/p&gt;&lt;p&gt;进入到发微博的界面:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/b8b708a7gw1f2n1zyhpanj20dr085aaw&quot; alt=&quot;weibo_upload_image_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="新浪图床" scheme="http://trytofix.com/tags/%E6%96%B0%E6%B5%AA%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>python模拟微博登陆</title>
    <link href="http://trytofix.com/2016/04/06/python%E6%A8%A1%E6%8B%9F%E5%BE%AE%E5%8D%9A%E7%99%BB%E9%99%86/"/>
    <id>http://trytofix.com/2016/04/06/python模拟微博登陆/</id>
    <published>2016-04-06T05:31:00.000Z</published>
    <updated>2016-05-05T06:54:40.345Z</updated>
    
    <content type="html">&lt;p&gt;通过网上各种查阅资料以及自己的亲身实践,终于实现了使用python对新浪微博的模拟登陆,模拟登陆新浪微博主要分为三个部分:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;预登陆 用来获取登陆所需信息.这些信息用来加密传输数据,并提交给服务器做验证.&lt;/li&gt;&lt;li&gt;生成提交表单&lt;ul&gt;&lt;li&gt;生成用户名&lt;/li&gt;&lt;li&gt;生成密码&lt;/li&gt;&lt;li&gt;生成其他必须字段&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;登陆并保存cookie&lt;ul&gt;&lt;li&gt;请求登陆url并提交表单&lt;/li&gt;&lt;li&gt;登陆成功后需要打开跳转页面完成登陆&lt;/li&gt;&lt;li&gt;保存cookie,以便之后使用&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;预登陆&quot;&gt;&lt;a href=&quot;#预登陆&quot; class=&quot;headerlink&quot; title=&quot;预登陆&quot;&gt;&lt;/a&gt;预登陆&lt;/h3&gt;&lt;p&gt;预登陆请求的url地址为&lt;code&gt;http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;amp;callback=sinaSSOController.preloginCallBack&amp;amp;su=ZW5nbGFuZHNldSU0MDE2My5jb20%3D&amp;amp;rsakt=mod&amp;amp;checkpin=1&amp;amp;cli&lt;/code&gt;,返回的数据是一个包含了json数据的html页面,通过正则表达式可以截取到json数据.&lt;br&gt;每次请求时url返回的数据都是不一样的,某次请求数据如下:&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sinaSSOController.preloginCallBack(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;retcode: 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;servertime: 1459925087,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pcid: &quot;gz-735ae223662fe03ed41939ba1616f11a07ad&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nonce: &quot;NVPC1L&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pubkey: &quot;EB2A38568661887FA180BDDB5CABD5F21C7BFD59C090CB2D245A87AC253062882729293E5506350508E7F9AA3BB77F4333231490F915F6D63C55FE2F08A49B353F444AD3993CACC02DB784ABBB8E42A9B1BBFFFB38BE18D78E87A0E41B9B8F73A928EE0CCEE1F6739884B9777E4FE9E88A1BBE495927AC4A799B3181D6442443&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rsakv: &quot;1330428213&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;is_openlock: 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;showpin: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exectime: 69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意其中的servertime,nonce,pubkey,rsakv这字段是非常重要的,通过处理拿到这四个值.&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pre_login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pre_login_url = &lt;span class=&quot;string&quot;&gt;&#39;http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;amp;callback=sinaSSOController.preloginCallBack&amp;amp;su=MTUyNTUxMjY3OTY%3D&amp;amp;rsakt=mod&amp;amp;checkpin=1&amp;amp;client=ssologin.js%28v1.4.18%29&amp;amp;_=1458836718537&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pre_response = requests.get(pre_login_url).text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pre_content_regex = &lt;span class=&quot;string&quot;&gt;r&#39;\((.*?)\)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    patten = re.search(pre_content_regex, pre_response)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nonce = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pubkey = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    servertime = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsakv = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; patten.groups():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pre_content = patten.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pre_result = json.loads(pre_content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nonce = pre_result.get(&lt;span class=&quot;string&quot;&gt;&quot;nonce&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pubkey = pre_result.get(&lt;span class=&quot;string&quot;&gt;&#39;pubkey&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        servertime = pre_result.get(&lt;span class=&quot;string&quot;&gt;&#39;servertime&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rsakv = pre_result.get(&lt;span class=&quot;string&quot;&gt;&quot;rsakv&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nonce, pubkey, servertime, rsakv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 id=&quot;生成提交表单&quot;&gt;&lt;a href=&quot;#生成提交表单&quot; class=&quot;headerlink&quot; title=&quot;生成提交表单&quot;&gt;&lt;/a&gt;生成提交表单&lt;/h3&gt;&lt;p&gt;既然是模拟登陆,用户名和密码就是最重要的两项&lt;/p&gt;&lt;ul&gt;&lt;li&gt;用户名使用base64编码&lt;/li&gt;&lt;li&gt;密码编码较为复杂:&lt;ul&gt;&lt;li&gt;通过预登陆得到的pubkey的十进制(n)与65537(e)生成rsa公钥&lt;/li&gt;&lt;li&gt;将预登陆得到的servertime,nonce和password拼接成字符串&lt;/li&gt;&lt;li&gt;将第二步得到的字符串使用第一步生成的公钥加密&lt;/li&gt;&lt;li&gt;将第三步得到的二进制加密数据转换为十六进制的数据,转换后的数据就是需要提交的密码&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;generate_form_data&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(nonce, pubkey, servertime, rsakv, username, password)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsa_public_key = int(pubkey, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key = rsa.PublicKey(rsa_public_key, &lt;span class=&quot;number&quot;&gt;65537&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message = str(servertime) + &lt;span class=&quot;string&quot;&gt;&#39;\t&#39;&lt;/span&gt; + str(nonce) + &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt; + str(password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    passwd = rsa.encrypt(message, key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    passwd = binascii.b2a_hex(passwd)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    username = urllib2.quote(username)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    username = base64.encodestring(username)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    form_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;entry&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;weibo&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;gateway&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;from&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;savestate&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;7&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;useticket&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;pagerefer&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;http://weibo.com/p/1005052679342531/home?from=page_100505&amp;amp;mod=TAB&amp;amp;pids=plc_main&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;vsnf&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;su&#39;&lt;/span&gt;: username,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;service&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;miniblog&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;servertime&#39;&lt;/span&gt;: servertime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;nonce&#39;&lt;/span&gt;: nonce,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;pwencode&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;rsa2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;rsakv&#39;&lt;/span&gt;: rsakv,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;sp&#39;&lt;/span&gt;: passwd,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;sr&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;1366*768&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;encoding&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;UTF-8&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;prelt&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;115&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;url&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;http://weibo.com/ajaxlogin.php?framelogin=1&amp;amp;callback=parent.sinaSSOController.feedBackUrlCallBack&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;returntype&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;META&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    form_data = urllib.urlencode(form_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; form_data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;登陆并保存cookie&quot;&gt;&lt;a href=&quot;#登陆并保存cookie&quot; class=&quot;headerlink&quot; title=&quot;登陆并保存cookie&quot;&gt;&lt;/a&gt;登陆并保存cookie&lt;/h3&gt;&lt;p&gt;通过cookielib保存登陆成功后的cookie.注意下段代码中的&lt;code&gt;login_url&lt;/code&gt;,这是登陆成功后的跳转界面,只有成功跳转,才算登陆成功.&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(form_data)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&#39;http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headers = (&lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.3; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cookie = cookielib.MozillaCookieJar(cookie_file)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handler = urllib2.HTTPCookieProcessor(cookie)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opener = urllib2.build_opener(handler)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opener.addheaders.append(headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    req = opener.open(url, form_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    redirect_result = req.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    login_pattern = &lt;span class=&quot;string&quot;&gt;r&#39;location.replace\(\&#39;(.*?)\&#39;\)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    login_url = re.search(login_pattern, redirect_result).group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opener.open(login_url).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cookie.save(cookie_file, ignore_discard=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, ignore_expires=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;完整的可运行代码请参照&lt;a href=&quot;https://github.com/trytofix/hexo_weibo_image/blob/master/weibo_util.py&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;weibo_util.py&lt;/a&gt;&lt;/p&gt;&lt;p&gt;参考内容:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/andrewseu/article/details/48730735&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;python模拟登录新浪微博&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/968.html&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;Python爬虫入门六之Cookie的使用&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/yuxc/archive/2011/08/01/2123995.html&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;Python 标准库 urllib2 的使用细节&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;通过网上各种查阅资料以及自己的亲身实践,终于实现了使用python对新浪微博的模拟登陆,模拟登陆新浪微博主要分为三个部分:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;预登陆 用来获取登陆所需信息.这些信息用来加密传输数据,并提交给服务器做验证.&lt;/li&gt;&lt;li&gt;生成提交表单&lt;ul&gt;&lt;li&gt;生成用户名&lt;/li&gt;&lt;li&gt;生成密码&lt;/li&gt;&lt;li&gt;生成其他必须字段&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;登陆并保存cookie&lt;ul&gt;&lt;li&gt;请求登陆url并提交表单&lt;/li&gt;&lt;li&gt;登陆成功后需要打开跳转页面完成登陆&lt;/li&gt;&lt;li&gt;保存cookie,以便之后使用
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="微博登陆" scheme="http://trytofix.com/tags/%E5%BE%AE%E5%8D%9A%E7%99%BB%E9%99%86/"/>
    
  </entry>
  
  <entry>
    <title>python生成md5值</title>
    <link href="http://trytofix.com/2016/04/05/python%E7%94%9F%E6%88%90md5%E5%80%BC/"/>
    <id>http://trytofix.com/2016/04/05/python生成md5值/</id>
    <published>2016-04-05T04:03:40.000Z</published>
    <updated>2016-05-05T06:54:40.341Z</updated>
    
    <content type="html">&lt;p&gt;使用md5模块(the md5 module is deprecated; use hashlib instead):&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; md5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src = &lt;span class=&quot;string&quot;&gt;&#39;this is a md5 test.&#39;&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m1 = md5.new()   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m1.update(src)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; m1.hexdigest()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用hashlib模块(推荐)&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hashlib   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src = &lt;span class=&quot;string&quot;&gt;&#39;this is a md5 test.&#39;&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m2 = hashlib.md5()   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m2.update(src)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; m2.hexdigest()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;使用md5模块(the md5 module is deprecated; use hashlib instead):&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
    
    </summary>
    
      <category term="python" scheme="http://trytofix.com/categories/python/"/>
    
    
      <category term="md5" scheme="http://trytofix.com/tags/md5/"/>
    
  </entry>
  
</feed>
